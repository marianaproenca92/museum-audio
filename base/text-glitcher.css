/* Minimal, safe glitch CSS */
[data-glitch]{
  position: relative;
  display: inline-block;
}
[data-glitch]::before,
[data-glitch]::after{
  content: attr(data-text);
  position: absolute;
  inset: 0;
  pointer-events: none;
  mix-blend-mode: screen;
  opacity: 0; /* off until .glitching is applied */
  will-change: transform, opacity, clip-path;
}

@keyframes gl-flicker{ 0%,100%{opacity:1} 50%{opacity:.65} }
@keyframes gl-scanA{ 0%{transform:translate(0,0)} 100%{transform:translate(1px,0)} }
@keyframes gl-scanB{ 0%{transform:translate(0,0)} 100%{transform:translate(-1px,0)} }

.glitching{ animation: gl-flicker .28s steps(2,end) 1; }
.glitching::before{
  color:#00e5ff;
  opacity:1;
  clip-path: inset(0 0 55% 0);
  animation: gl-scanA .14s steps(2,end) 2;
}
.glitching::after{
  color:#ff3366;
  opacity:1;
  clip-path: inset(45% 0 0 0);
  animation: gl-scanB .14s steps(2,end) 2;
}

@media (prefers-reduced-motion: reduce){
  .glitching, .glitching::before, .glitching::after{ animation: none !important; }
}
